# Generated by Django 2.1.4 on 2019-05-27 17:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArtContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_name', models.CharField(max_length=200, verbose_name='章名')),
                ('chapter_content', models.TextField(verbose_name='文章内容')),
                ('chapter_add_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArtDiscuss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discuss_content', models.TextField(verbose_name='留言内容')),
                ('discuss_add_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArtHot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hot_evaluate', models.BigIntegerField(blank=True, null=True, verbose_name='评价值')),
                ('hot_browse', models.BigIntegerField(blank=True, null=True, verbose_name='浏览量')),
                ('hot_relay', models.BigIntegerField(blank=True, null=True, verbose_name='转发数')),
                ('hot_share', models.BigIntegerField(blank=True, null=True, verbose_name='分享数')),
                ('hot_discuss', models.BigIntegerField(blank=True, null=True, verbose_name='讨论值')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('art_name', models.CharField(max_length=200, verbose_name='主题')),
                ('art_add_date', models.DateTimeField(auto_now_add=True)),
                ('art_author', models.CharField(default='', max_length=10, verbose_name='作者')),
                ('art_type', models.CharField(default='', max_length=200, verbose_name='类型')),
                ('art_status', models.CharField(default='', max_length=200, verbose_name='状态')),
                ('art_introduction', models.CharField(default='', max_length=200, verbose_name='简介')),
                ('art_name_used', models.CharField(default='', max_length=200, verbose_name='曾用名')),
                ('art_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArtLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_content', models.CharField(max_length=20, verbose_name='标签')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning_logs.Article')),
            ],
        ),
        migrations.AddField(
            model_name='arthot',
            name='article',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='learning_logs.Article'),
        ),
        migrations.AddField(
            model_name='artdiscuss',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning_logs.Article'),
        ),
        migrations.AddField(
            model_name='artdiscuss',
            name='discuss_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artcontent',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning_logs.Article'),
        ),
    ]
